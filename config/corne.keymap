/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL   &kp A  &kp S  &kp D         &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                          &kp LEFT_ALT  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp LWIN
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3        &kp TILDE  &kp HASH                &kp N6     &kp N7    &kp N8    &kp N9     &kp N0           &kp DELETE
&kp LCTRL  &kp N4  &kp N5  &kp NUMBER_6  &kp MINUS  &kp NON_US_BACKSLASH    &kp LEFT   &kp DOWN  &kp UP    &kp RIGHT  &kp PRINTSCREEN  &kp INS
&kp LSHFT  &kp N7  &kp N8  &kp N9        &kt N0     &kp PERIOD              &kp GRAVE  &trans    &trans    &trans     &trans           &kp RSHIFT
                           &kp LGUI      &trans     &kp SPACE               &kp RET    &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp PIPE   &kp AMPS   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp RIGHT_BRACKET  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp BSLH           &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE           &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3    &kp F4   &trans       &trans             &trans      &trans        &trans      &trans  &trans
&trans  &kp F5  &kp F6   &kp F7    &kp F8   &trans       &kp C_VOLUME_UP    &kp K_PREV  &kp K_PP      &kp K_NEXT  &trans  &trans
&trans  &kp F9  &kp F10  &kp F11   &kp F12  &trans       &kp K_VOLUME_DOWN  &bt BT_NXT  &bt BT_SEL 0  &bt BT_CLR  &trans  &ext_power EP_TOG
                         &kp LGUI  &trans   &kp SPACE    &kp ENTER          &trans      &kp LALT
            >;
        };
    };
};

